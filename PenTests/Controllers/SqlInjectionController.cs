using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.Configuration;
using System.Web.Mvc;

namespace PenTests.Controllers
{
    public class SqlInjectionController : Controller
    {

        // GET: SqlInjection
        public ActionResult Index()
        {
            var products = new List<Product>();
            var catID = Request.QueryString["CategoryID"];
            if (!String.IsNullOrWhiteSpace(catID))
            {
                var sqlString = "SELECT * FROM Products WHERE CategoryID = " + catID;
                var connString = WebConfigurationManager.ConnectionStrings["PentestConnection"].ConnectionString;
                using (var conn = new SqlConnection(connString))
                {
                    var command = new SqlCommand(sqlString, conn); command.Connection.Open();
                    var reader = command.ExecuteReader();
                    products = GetProducts(reader);
                }
            }
            return View(products);
        }

        // GET: SqlInjection - slightly improved
        public ActionResult ParameterisedIndex(int catID)
        {
            const string sqlString = "SELECT * FROM Products WHERE CategoryID = @CategoryID";
            var connString = WebConfigurationManager.ConnectionStrings["NorthwindConnectionString"].ConnectionString;
            using (var conn = new SqlConnection(connString))
            {
                var command = new SqlCommand(sqlString, conn);
                command.Parameters.Add("@CategoryID", SqlDbType.Int).Value = catID;
                command.Connection.Open();
                var results = command.ExecuteReader();

            }
                return View();
        }

        // GET: SqlInjection - slightly improved
        public ActionResult ORMIndex(int catID)
        {
            //var dc = new NorthwindDataContext(); 
           // var catIDInt = Convert.ToInt16(catID); 
            //var results = dc.Products.Where(p => p.CategoryID == catIDInt);
            return View();
        }

        private List<Product> GetProducts(SqlDataReader reader)
        {
            var products = new List<Product>();
            while (reader.Read())
            {
                products.Add(new Product
                {
                    ProductName = reader.GetString(1),
                    UnitsInStock = reader.GetInt16(6)
                });
            }
            return (products);
        }
    }

    

    public class Product
    {
        public string ProductName { get; set; }
        public int UnitsInStock { get; set; }
    }
}